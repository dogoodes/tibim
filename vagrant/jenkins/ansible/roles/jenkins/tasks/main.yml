---
- name: Load default variables
  include_vars:
    file: defaults/main.yml

- name: import jenkins key
  rpm_key:
    key: https://jenkins-ci.org/redhat/jenkins-ci.org.key
    state: present
    validate_certs: no

- name: get jenkins repo for ansible
  get_url:
    url: http://pkg.jenkins-ci.org/redhat/jenkins.repo
    dest: /etc/yum.repos.d/jenkins.repo

- name: Log in to Jenkins CLI if auth config is available
  ignore_errors: yes
  command: >
    {{ jenkins_cli_cmd }} login --username {{ jenkins_admin_user }} --password {{ jenkins_admin_password }}

- name: install jenkins
  yum:
    name: jenkins
    state: latest
  register: jenkins_install

- name: ensure jenkins is running
  service:
    name: jenkins
    state: started

- name: start jenkins on boot
  shell: chkconfig jenkins on

- name: create jenkins configuration for redhat
  file:
    path: /etc/sysconfig/jenkins
    state: touch

- name: configure jenkins port for redhat
  lineinfile:
    dest: /etc/sysconfig/jenkins
    regexp: ^JENKINS_PORT=
    line: JENKINS_PORT={{port}}
  register: config_changed

- name: restart jenkins now
  service:
    name: jenkins
    state: restarted

- name: configure jenkins prefix for redhat
  lineinfile:
    dest: /etc/sysconfig/jenkins
    regexp: ^PREFIX=
    line: PREFIX={{prefix}}

#- name: Configure Jenkins E-mail
#  template:
#    src: hudson.tasks.Mailer.xml.j2
#    dest: "{{ jenkins_lib }}/hudson.tasks.Mailer.xml"
#    owner: jenkins
#    group: jenkins
#    mode: 0644

- name: "{{ startup_delay_s | default(10) }}s delay while starting jenkins"
  wait_for:
    host: localhost
    port: "{{ port }}"
    delay: "{{ startup_delay_s | default(10) }}"

- name: "Create Jenkins CLI destination directory: {{ jenkins_dest }}"
  file:
    path: "{{ jenkins_dest }}"
    state: directory

- name: get jenkins cli
  get_url:
    url: "{{ jenkins_api_url }}jnlpJars/jenkins-cli.jar"
    dest: "{{ jenkins.cli_dest }}"
    mode: 0440
  register: jenkins_local_cli
  until: "'OK' in jenkins_local_cli.msg or 'file already exists' in jenkins_local_cli.msg"
  retries: 5
  delay: 10

- name: get jenkins updates
  get_url:
    url: "{{ jenkins_updates_url }}"
    dest: "{{ jenkins.updates_dest }}"
    thirsty: yes
    mode: 0440
    timeout: 30
    use_proxy: "{{proxy}}"
  environment: proxy_env
  register: jenkins_updates
  when: proxy

- name: list plugins
  shell: "{{ jenkins_cli_cmd }} list-plugins --username {{ jenkins_admin_user }} --password {{ jenkins_admin_password }} | cut -f 1 -d ' '"

- name: ensure jenkins running before requesting safe restart
  service:
    name: jenkins
    state: started

- name: Install/update plugins
  shell: "{{ jenkins_cli_cmd }} install-plugin {{ item }} --username {{ jenkins_admin_user }} --password {{ jenkins_admin_password }}"
  with_items: "{{ plugins }}"
  ignore_errors: yes
  notify:
    - 'Restart Jenkins'

- name: List plugins to be updated
  shell: "{{ jenkins_cli_cmd }} list-plugins --username {{ jenkins_admin_user }} --password {{ jenkins_admin_password }} | grep ')$' | cut -f 1 -d ' ' | awk 1 ORS=' '"
  register: plugins_updates

- name: Update plugins
  shell: "{{ jenkins_cli_cmd }} install-plugin {{ item }} --username {{ jenkins_admin_user }} --password {{ jenkins_admin_password }}"
  with_items: "{{ plugins_updates.stdout.split() }}"
  ignore_errors: yes
  notify:
    - 'Restart Jenkins'